version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - whatsapp-network

  n8n:
    image: n8nio/n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=${N8N_PORT:-5678}
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - N8N_EDITOR_BASE_URL=${N8N_PROTOCOL:-http}://${N8N_HOST:-localhost}:5678
      - N8N_METRICS=true
      - N8N_METRICS_PREFIX=n8n_
      - WEBHOOK_URL=${N8N_PROTOCOL:-http}://${N8N_HOST:-localhost}:5678/
      - EXECUTIONS_DATA_PRUNE=true
      - EXECUTIONS_DATA_MAX_AGE=168
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8n}
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - whatsapp-network
    depends_on:
      - traefik
      - postgres
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`${N8N_HOST:-localhost}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  # WAHA - WhatsApp HTTP API
  waha:
    image: devlikeapro/waha
    restart: always
    ports:
      - "3000:3000"
    environment:
      - WAHA_HOST=${WAHA_HOST:-localhost}
      - WAHA_PORT=${WAHA_PORT:-3000}
      - WAHA_PROTOCOL=${WAHA_PROTOCOL:-http}
    volumes:
      - ./data/waha:/app/data
    networks:
      - whatsapp-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.waha.rule=Host(`${WAHA_HOST:-localhost}`)"
      - "traefik.http.routers.waha.entrypoints=websecure"
      - "traefik.http.services.waha.loadbalancer.server.port=3000"

  # Evolution API
  evolution-api:
    image: evolution/evolution-api:2.5.1
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SERVER_URL=${SERVER_URL:-http://localhost:8080}
      - DOCKER_ENV=true
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    networks:
      - whatsapp-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.evolution.rule=Host(`${EVOLUTION_HOST:-localhost}`)"
      - "traefik.http.routers.evolution.entrypoints=websecure"
      - "traefik.http.services.evolution.loadbalancer.server.port=8080"

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - whatsapp-network

  postgres:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - whatsapp-network

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - whatsapp-network

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - whatsapp-network

networks:
  whatsapp-network:
    driver: bridge

volumes:
  n8n_data:
  evolution_instances:
  evolution_store:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data: 